docker.enabled = true

params {
  reads = false
  singleEnd = false
  outdir = 'results'
  med_resources_fraction = 0.25
  max_memory  = '10.GB'
  max_forks   = 6
  max_cpus    = 2
}

process {
  withLabel: med_resources {
    container = 'flowcraft/fastqc:0.11.7-1'
    cpus = { alloc_med_resource(params.max_cpus) }
    //maxForks =  { alloc_med_resource(params.max_forks) }
    memory = { alloc_med_resource(params.max_memory) }
  }
  withName: fastqc {
      container = 'flowcraft/fastqc:0.11.7-1'
  }
  withName: multiqc {
    container = 'ewels/multiqc:v1.7'
  }
}

def alloc_med_resource(obj) {
    try {
      if (obj.getClass() == nextflow.util.MemoryUnit)
        return ( Math.floor ( (params.max_memory  as int) * (params.med_resources_fraction as float ) ) as nextflow.util.MemoryUnit )
      else if (obj.getClass() == java.lang.Integer)
        return ( Math.floor ( (obj as int) * (params.med_resources_fraction as float)) as int)
      else
        return obj
    } catch (all) {
        println "   ### ERROR ###   Max params max_memory:'${params.max_memory}', or max_cpus:'${params.max_cpus}'  or max_cpus:'${params.max_forks}'  is not valid! Using default value: $obj"
    }
}